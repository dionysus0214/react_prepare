{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\nconst initialState = {\n  user: {},\n  post: {}\n}; // (이전상태, 액선) => 다음상태\n\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","initialState","rootReducer","index","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,SAAQC,eAAR,QAA8B,OAA9B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,YAAY,GAAG;AACnBF,EAAAA,IAAI,EAAE,EADa;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB,C,CASA;;AACA,MAAME,WAAW,GAAGJ,eAAe,CAAC;AAClCK,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC7B,YAAOA,MAAM,CAACC,IAAd;AACE,WAAKT,OAAL;AACE,+CAAWO,KAAX,GAAqBC,MAAM,CAACE,OAA5B;;AACF;AACE,eAAOH,KAAP;AAJJ;AAMD,GARiC;AASlCL,EAAAA,IATkC;AAUlCC,EAAAA;AAVkC,CAAD,CAAnC;AAaA,eAAeE,WAAf","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\r\nimport {combineReducers} from 'redux';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\n\r\nconst initialState = {\r\n  user: {\r\n    \r\n  },\r\n  post: {\r\n    \r\n  },\r\n};\r\n\r\n// (이전상태, 액선) => 다음상태\r\nconst rootReducer = combineReducers({\r\n  index: (state = {}, action) => {\r\n    switch(action.type) {\r\n      case HYDRATE:\r\n        return {...state, ...action.payload};   \r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  user,\r\n  post,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}