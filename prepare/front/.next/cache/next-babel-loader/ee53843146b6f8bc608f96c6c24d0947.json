{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\NodeJS\\\\react-twitter\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Post, \"O7z5LS2bVHdYMLLoaFOX6nOgThc=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/pages/post/[id].js"],"names":["React","useSelector","useRouter","PostCard","AppLayout","Post","router","id","query","state","post","singlePost"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAOA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,IAAMC,IAAI,GAAE,SAANA,IAAM,GAAM;AAAA;;AAChB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADgB,MAETK,EAFS,GAEHD,MAAM,CAACE,KAFJ,CAETD,EAFS;;AAAA,qBAGKN,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHhB;AAAA,MAGTC,UAHS,gBAGTA,UAHS;;AAKhB,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAVD;;GAAMN,I;UACWH,S,EAEMD,W;;;KAHjBI,I;;AA6BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {useRouter} from 'next/router';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST} from '../../reducers/user';\r\nimport {LOAD_POST_REQUEST} from '../../reducers/post';\r\nimport PostCard from '../../components/PostCard';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst Post= () => {\r\n  const router = useRouter();\r\n  const {id} = router.query;\r\n  const {singlePost} = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if(context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}