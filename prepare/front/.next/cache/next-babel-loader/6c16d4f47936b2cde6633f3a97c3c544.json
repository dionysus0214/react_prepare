{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginActioin = data => {\n  return dispatch => {\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).catch(err => {\n      dispatch(loginFailureAction(err));\n    });\n  };\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: 'LOG_IN_SUCCESS',\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: 'LOG_IN_FAILURE',\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\nexport const logoutSuccessAction = () => {\n  return {\n    type: 'LOG_OUT_SUCCESS'\n  };\n};\nexport const logoutFailureAction = () => {\n  return {\n    type: 'LOG_OUT_FAILURE'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/reducers/user.js"],"names":["initialState","isLoggedIn","me","signUpData","loginData","loginActioin","data","dispatch","loginRequestAction","axios","post","then","res","loginSuccessAction","catch","err","loginFailureAction","type","logoutRequestAction","logoutSuccessAction","logoutFailureAction","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,EAAE,EAAE,IAFsB;AAG1BC,EAAAA,UAAU,EAAE,EAHc;AAI1BC,EAAAA,SAAS,EAAE;AAJe,CAArB;AAOP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAW,YAAX,EACGC,IADH,CACSC,GAAD,IAAS;AACbL,MAAAA,QAAQ,CAACM,kBAAkB,CAACD,GAAG,CAACN,IAAL,CAAnB,CAAR;AACD,KAHH,EAIGQ,KAJH,CAIUC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAACS,kBAAkB,CAACD,GAAD,CAAnB,CAAR;AACD,KANH;AAOD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMP,kBAAkB,GAAIF,IAAD,IAAU;AAC1C,SAAO;AACLW,IAAAA,IAAI,EAAE,gBADD;AAELX,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMO,kBAAkB,GAAIP,IAAD,IAAU;AAC1C,SAAO;AACLW,IAAAA,IAAI,EAAE,gBADD;AAELX,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMU,kBAAkB,GAAIV,IAAD,IAAU;AAC1C,SAAO;AACLW,IAAAA,IAAI,EAAE,gBADD;AAELX,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMY,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMG,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLH,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAMP,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGtB,YAAT,EAAuBuB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACN,IAAf;AACE,SAAK,QAAL;AACE,6CACKK,KADL;AAEErB,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,EAAE,EAAEqB,MAAM,CAACjB;AAHb;;AAKF,SAAK,SAAL;AACE,6CACKgB,KADL;AAEErB,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,EAAE,EAAE;AAHN;;AAKF;AACE,aAAOoB,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  isLoggedIn: false,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n}\r\n\r\nexport const loginActioin = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequestAction());\r\n    axios.post('/api/login')\r\n      .then((res) => {\r\n        dispatch(loginSuccessAction(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginFailureAction(err));\r\n      })\r\n  }\r\n}\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_REQUEST',\r\n    data,\r\n  }\r\n}\r\n\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_SUCCESS',\r\n    data,\r\n  }\r\n}\r\n\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_FAILURE',\r\n    data,\r\n  }\r\n}\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: 'LOG_OUT_REQUEST',\r\n  }\r\n}\r\n\r\nexport const logoutSuccessAction = () => {\r\n  return {\r\n    type: 'LOG_OUT_SUCCESS',\r\n  }\r\n}\r\n\r\nexport const logoutFailureAction = () => {\r\n  return {\r\n    type: 'LOG_OUT_FAILURE',\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        me: action.data,\r\n      };\r\n    case 'LOG_OUT':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}