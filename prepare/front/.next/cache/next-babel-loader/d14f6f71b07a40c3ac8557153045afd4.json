{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport ImagesZoom from './ImagesZoom';\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        role: \"presentation\",\n        src: `http://localhost:3030/${images[0].src}`,\n        alt: images[0].src,\n        onClick: onZoom\n      }), showImagesZoom && /*#__PURE__*/_jsx(ImagesZoom, {\n        images: images,\n        onCLose: onClose\n      })]\n    });\n  }\n\n  if (images.length === 2) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        role: \"presentation\",\n        style: {\n          width: '50%',\n          display: 'inline-block'\n        },\n        src: `http://localhost:3030/${images[0].src}`,\n        alt: images[0].src,\n        onClick: onZoom\n      }), /*#__PURE__*/_jsx(\"img\", {\n        role: \"presentation\",\n        style: {\n          width: '50%',\n          display: 'inline-block'\n        },\n        src: `http://localhost:3030/${images[1].src}`,\n        alt: images[1].src,\n        onClick: onZoom\n      }), showImagesZoom && /*#__PURE__*/_jsx(ImagesZoom, {\n        images: images,\n        onCLose: onClose\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        role: \"presentation\",\n        style: {\n          width: '50%',\n          display: 'inline-block'\n        },\n        src: images[0].src,\n        alt: images[0].src,\n        onClick: onZoom\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        role: \"presentation\",\n        style: {\n          display: 'inline-block',\n          width: '50%',\n          textAlign: 'center',\n          verticalAlign: 'middle'\n        },\n        onClick: onZoom,\n        children: [/*#__PURE__*/_jsx(PlusOutlined, {}), /*#__PURE__*/_jsx(\"br\", {}), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354 \\uBCF4\\uAE30\"]\n      })]\n    }), showImagesZoom && /*#__PURE__*/_jsx(ImagesZoom, {\n      images: images,\n      onCLose: onClose\n    })]\n  });\n};\n\nexport default PostImages;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/components/PostImages.js"],"names":["React","useCallback","useState","PlusOutlined","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","width","display","textAlign","verticalAlign"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {PlusOutlined} from '@ant-design/icons';\r\n\r\nimport ImagesZoom from './ImagesZoom';\r\n\r\nconst PostImages = ({images}) => {\r\n  const [showImagesZoom, setShowImagesZoom] =useState(false);\r\n\r\n  const onZoom = useCallback(() => {\r\n    setShowImagesZoom(true);\r\n  }, []);\r\n  const onClose = useCallback(() => {\r\n    setShowImagesZoom(false);\r\n  }, []);\r\n\r\n  if(images.length === 1 ) {\r\n    return (\r\n      <>\r\n        <img role=\"presentation\" src={`http://localhost:3030/${images[0].src}`} alt={images[0].src} onClick={onZoom} />\r\n        {showImagesZoom && <ImagesZoom images={images} onCLose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  if(images.length === 2 ) {\r\n    return (\r\n      <>\r\n        <img role=\"presentation\" style={{width: '50%', display: 'inline-block'}} src={`http://localhost:3030/${images[0].src}`} alt={images[0].src} onClick={onZoom} />\r\n        <img role=\"presentation\" style={{width: '50%', display: 'inline-block'}} src={`http://localhost:3030/${images[1].src}`} alt={images[1].src} onClick={onZoom} />\r\n        {showImagesZoom && <ImagesZoom images={images} onCLose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <img role=\"presentation\" style={{width: '50%', display: 'inline-block'}} src={images[0].src} alt={images[0].src} onClick={onZoom} />\r\n        <div\r\n          role=\"presentation\"\r\n          style={{display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle'}}\r\n          onClick={onZoom}\r\n        >\r\n          <PlusOutlined />\r\n          <br />\r\n          {images.length - 1}개의 사진 더 보기\r\n        </div>\r\n      </div>\r\n      {showImagesZoom && <ImagesZoom images={images} onCLose={onClose} />}\r\n    </>\r\n  );\r\n};\r\n\r\nPostImages.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nexport default PostImages;"]},"metadata":{},"sourceType":"module"}