{"ast":null,"code":"import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/sagas/user.js"],"names":["all","fork","takeLatest","put","delay","call","axios","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","logInAPI","data","post","logIn","action","result","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","console","log","followAPI","follow","unfollowAPI","unfollow","loadMyInfoAPI","get","loadMyInfo","watchChangeNickname","CHANGE_NICKNAME_REQUEST","changeNickname","watchLoadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import {all, fork, takeLatest, put, delay, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, \r\n  SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS,\r\n  FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS,\r\n  UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type : LOG_IN_SUCCESS,\r\n      data : result.data,\r\n    });\r\n  } catch(err) {\r\n    yield put({\r\n      type : LOG_IN_FAILURE,\r\n      error : err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type : LOG_OUT_SUCCESS,\r\n    });\r\n  } catch(err) {\r\n    yield put({\r\n      type : LOG_OUT_FAILURE,\r\n      error : err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type : SIGN_UP_SUCCESS,\r\n    });\r\n  } catch(err) {\r\n    yield put({\r\n      type : SIGN_UP_FAILURE,\r\n      error : err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI() {\r\n  return axios.post('/api/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n  return axios.post('/api/unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(unfollowAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}