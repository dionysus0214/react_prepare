{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NodeJS\\\\react-twitter\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/pages/post/[id].js"],"names":["React","useSelector","useRouter","END","axios","wrapper","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","PostCard","AppLayout","Post","router","id","query","singlePost","state","post","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,IAAI,GAAE,MAAM;AAChB,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAACU,IAAAA;AAAD,MAAOD,MAAM,CAACE,KAApB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAeb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC;AAEA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAGZ,OAAO,CAACY,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAf,EAAAA,KAAK,CAACkB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAGL,OAAO,CAACE,GAAR,IAAeD,MAAlB,EAA0B;AACxBf,IAAAA,KAAK,CAACkB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEpB;AADe,GAAvB;AAGAY,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEnB,iBADe;AAErBoB,IAAAA,IAAI,EAAET,OAAO,CAACU,MAAR,CAAehB;AAFA,GAAvB;AAIAM,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBtB,GAAvB;AACA,QAAMe,OAAO,CAACM,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAfiC,CAA3B;AAiBP,eAAepB,IAAf","sourcesContent":["import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {useRouter} from 'next/router';\r\nimport {END} from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST} from '../../reducers/user';\r\nimport {LOAD_POST_REQUEST} from '../../reducers/post';\r\nimport PostCard from '../../components/PostCard';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst Post= () => {\r\n  const router = useRouter();\r\n  const {id} = router.query;\r\n  const {singlePost} = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if(context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}