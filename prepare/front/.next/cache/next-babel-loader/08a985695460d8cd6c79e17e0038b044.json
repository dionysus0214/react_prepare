{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NodeJS\\\\react-twitter\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Popover, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport useSelection from 'antd/lib/table/hooks/useSelection';\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"red\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 27\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","Button","Card","Popover","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","useSelection","PostCard","post","dispatch","removePostLoading","state","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","onRemovePost","type","data","id","user","me","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,OAA7C,QAA2D,MAA3D;AACA,SAAQC,eAAR,EAAyBC,aAAzB,EAAwCC,eAAxC,EAAyDC,gBAAzD,EAA2EC,YAA3E,QAA8F,mBAA9F;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;AACA,OAAOC,YAAP,MAAyB,mCAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC3B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAsBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAvC;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoB3B,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAAC4B,iBAAD;AAAA,OAAoBC;AAApB,MAA4C7B,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM8B,YAAY,GAAG7B,WAAW,CAAC,MAAM;AACrC0B,IAAAA,QAAQ,CAAEI,IAAD,IAAU,CAACA,IAAZ,CAAR;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAMC,eAAe,GAAG/B,WAAW,CAAC,MAAM;AACxC4B,IAAAA,oBAAoB,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAApB;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,QAAME,YAAY,GAAGhC,WAAW,CAAC,MAAM;AACrCsB,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEf,mBADC;AAEPgB,MAAAA,IAAI,EAAEb,IAAI,CAACc;AAFJ,KAAD,CAAR;AAID,GAL+B,EAK7B,EAL6B,CAAhC;AAOA,QAAMA,EAAE,GAAGrB,WAAW,CAAEU,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACY,IAAN,CAAWC,EAAtB,mDAAW,eAAeF,EAA1B;AAAA,GAAD,CAAtB;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,YAAY,EAAE;AAAf,KAAZ;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEjB,IAAI,CAACkB,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAElB,IAAI,CAACkB;AAAzB;AAAA;AAAA;AAAA;AAAA,cAD3B;AAEE,MAAA,OAAO,EAAE,cACP,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cADO,EAEPd,KAAK,gBACD,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,KAA3B;AAA6C,QAAA,OAAO,EAAEI;AAAtD,SAAqC,OAArC;AAAA;AAAA;AAAA;AAAA,cADC,gBAED,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAJG,eAKP,QAAC,eAAD;AAA+B,QAAA,OAAO,EAAEE;AAAxC,SAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cALO,eAMP,QAAC,OAAD;AAAoB,QAAA,OAAO,eACzB,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACGI,EAAE,IAAId,IAAI,CAACmB,IAAL,CAAUL,EAAV,KAAiBA,EAAvB,gBAEC;AAAA,oCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAEZ,iBAA/B;AAAkD,cAAA,OAAO,EAAES,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,0BAFD,gBAOC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA,+BAYE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAZF,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,cANO,CAFX;AAAA,6BAwBE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASX,IAAI,CAACmB,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADV;AAEE,QAAA,KAAK,EAAEpB,IAAI,CAACmB,IAAL,CAAUC,QAFnB;AAGE,QAAA,WAAW,eAAE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAEpB,IAAI,CAACqB;AAAhC;AAAA;AAAA;AAAA;AAAA;AAHf;AAAA;AAAA;AAAA;AAAA;AAxBF;AAAA;AAAA;AAAA;AAAA,YADF,EA+BGf,iBAAiB,iBAChB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEN;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACE,QAAA,MAAM,EAAG,GAAEA,IAAI,CAACsB,QAAL,CAAcC,MAAO,OADlC;AAEE,QAAA,UAAU,EAAC,YAFb;AAGE,QAAA,UAAU,EAAEvB,IAAI,CAACsB,QAHnB;AAIE,QAAA,UAAU,EAAGE,IAAD,iBACV;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,MAAM,EAAEA,IAAI,CAACL,IAAL,CAAUC,QADpB;AAEE,YAAA,MAAM,eAAE,QAAC,MAAD;AAAA,wBAASI,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFV;AAGE,YAAA,OAAO,EAAEI,IAAI,CAACH;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CAxED;;AA0EAtB,QAAQ,CAAC0B,SAAT,GAAqB;AACnBzB,EAAAA,IAAI,EAAEpB,SAAS,CAAC8C,KAAV,CAAgB;AACpBZ,IAAAA,EAAE,EAAElC,SAAS,CAAC+C,MADM;AAEpBR,IAAAA,IAAI,EAAEvC,SAAS,CAACgD,MAFI;AAGpBP,IAAAA,OAAO,EAAEzC,SAAS,CAACiD,MAHC;AAIpBC,IAAAA,SAAS,EAAElD,SAAS,CAACgD,MAJD;AAKpBN,IAAAA,QAAQ,EAAE1C,SAAS,CAACmD,OAAV,CAAkBnD,SAAS,CAACgD,MAA5B,CALU;AAMpBV,IAAAA,MAAM,EAAEtC,SAAS,CAACmD,OAAV,CAAkBnD,SAAS,CAACgD,MAA5B;AANY,GAAhB,EAOHI;AARgB,CAArB;AAWA,eAAejC,QAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Card, Popover, Avatar, List, Comment} from 'antd';\r\nimport {RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone} from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport {REMOVE_POST_REQUEST} from '../reducers/post';\r\nimport useSelection from 'antd/lib/table/hooks/useSelection';\r\n\r\nconst PostCard = ({post}) => {\r\n  const dispatch = useDispatch();\r\n  const {removePostLoading} = useSelector((state) => state.post);\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    })\r\n  }, []);\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  return (\r\n    <div style={{marginBottom: 20}}>\r\n      <Card \r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\"/>,\r\n          liked\r\n            ? <HeartTwoTone twoToneColor=\"red\" key=\"heart\" onClick={onToggleLike} />\r\n            : <HeartOutlined onClick={onToggleLike} />,\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n          <Popover key=\"more\" content={(\r\n            <Button.Group>\r\n              {id && post.User.id === id \r\n              ? (\r\n                <>\r\n                  <Button>수정</Button>\r\n                  <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                </>\r\n              )\r\n              : <Button>신고</Button>}\r\n            </Button.Group>\r\n          )}>\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}  \r\n        />   \r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List \r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}