{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport { Button, Input } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst PostCardContent = ({\n  postData\n}) => /*#__PURE__*/_jsx(\"div\", {\n  children: postData.split(/(#[^\\s#]+)/g).map((v, i) => {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return /*#__PURE__*/_jsx(Link, {\n        href: `/hashtag/${v.slice(1)}`,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: v\n        })\n      }, i);\n    }\n\n    return v;\n  })\n});\n\nexport default PostCardContent;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/components/PostCardContent.js"],"names":["React","useState","useCallback","useEffect","Link","Button","Input","useSelector","PostCardContent","postData","split","map","v","i","match","slice"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,MAA5B;AAEA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,kBACtB;AAAA,YACGA,QAAQ,CAACC,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAkC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3C,QAAGD,CAAC,CAACE,KAAF,CAAQ,YAAR,CAAH,EAA0B;AACxB,0BAAO,KAAC,IAAD;AAAM,QAAA,IAAI,EAAG,YAAWF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAW,EAAnC;AAAA,+BAA8C;AAAA,oBAAIH;AAAJ;AAA9C,SAA2CC,CAA3C,CAAP;AACD;;AACD,WAAOD,CAAP;AACD,GALA;AADH,EADF;;AAeA,eAAeJ,eAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\r\nimport Link from 'next/link';\r\nimport {Button, Input} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst PostCardContent = ({postData}) => (\r\n  <div>\r\n    {postData.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n      if(v.match(/(#[^\\s#]+)/)) {\r\n        return <Link href={`/hashtag/${v.slice(1)}`} key={i}><a>{v}</a></Link>\r\n      }\r\n      return v;\r\n    })}\r\n  </div>\r\n);\r\n\r\nPostCardContent.propTypes = {\r\n  postData: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PostCardContent;"]},"metadata":{},"sourceType":"module"}