{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NodeJS\\\\react-twitter\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC220\\uC220\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/components/CommentForm.js"],"names":["Form","Input","Button","React","useCallback","useEffect","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";;AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC9B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,EAAE,GAAGN,WAAW,CAAEO,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAACI,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAAsCX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAvD;AACA,QAAM,CAACQ,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDb,QAAQ,CAAC,EAAD,CAAnE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGa,cAAH,EAAmB;AACjBI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,QAAMK,eAAe,GAAGnB,WAAW,CAAC,MAAM;AACxCoB,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACE,EAAjB,EAAqBM,WAArB;AACAP,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAEhB,mBADC;AAEPiB,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAER,WAAV;AAAuBS,QAAAA,MAAM,EAAEjB,IAAI,CAACE,EAApC;AAAwCgB,QAAAA,MAAM,EAAEhB;AAAhD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACM,WAAD,EAAcN,EAAd,CANgC,CAAnC;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACQ,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEZ,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACU,UAAAA,QAAQ,EAAE,UAAX;AAAuBE,UAAAA,KAAK,EAAE,CAA9B;AAAiCC,UAAAA,MAAM,EAAE,CAAC,EAA1C;AAA8CC,UAAAA,MAAM,EAAE;AAAtD,SAAf;AAAyE,QAAA,IAAI,EAAC,SAA9E;AAAwF,QAAA,QAAQ,EAAC,QAAjG;AAA0G,QAAA,OAAO,EAAEhB,iBAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA5BD;;AA8BAR,WAAW,CAACyB,SAAZ,GAAwB;AACtBxB,EAAAA,IAAI,EAAEN,SAAS,CAAC+B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe3B,WAAf","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport React, {useCallback, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport {ADD_COMMENT_REQUEST} from '../reducers/post';\r\n\r\nconst CommentForm = ({post}) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const {addCommentDone, addCommentLoading} = useSelector((state) => state.post);\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n  \r\n  useEffect(() => {\r\n    if(addCommentDone) {\r\n      setCommentText('');\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: {content: commentText, postId: post.id, userId: id},\r\n    });\r\n  }, [commentText, id]);\r\n  \r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{position: 'relative', margin: 0}}>\r\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n        <Button style={{position: 'absolute', right: 0, bottom: -40, zIndex: 1}} type=\"primary\" htmlType=\"submit\" loading={addCommentLoading}>술술</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}