{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { loginRequestAction } from '../reducers/user';\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"k4bay5-0\"\n})([\"margin-top:10px;\"]);\nvar FormWrapper = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"k4bay5-1\"\n})([\"padding:10px;\"]);\n\nvar LoginForm = function LoginForm() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInLoading = _useSelector.logInLoading,\n      logInError = _useSelector.logInError;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  useEffect(function () {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n  var onSubmitForm = useCallback(function () {\n    console.log(email, password);\n    dispatch(loginRequestAction({\n      email: email,\n      password: password\n    }));\n  }, [email, password]);\n  return /*#__PURE__*/_jsxs(FormWrapper, {\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"user-email\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n        name: \"user-email\",\n        type: \"email\",\n        value: email,\n        onChange: onChangeEmail,\n        required: true\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"user-password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n        name: \"user-id\",\n        type: \"password\",\n        value: password,\n        onChange: onChangePassword,\n        required: true\n      })]\n    }), /*#__PURE__*/_jsxs(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: logInLoading,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/components/LoginForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","Link","styled","useDispatch","useSelector","useInput","loginRequestAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","state","user","logInLoading","logInError","email","onChangeEmail","password","onChangePassword","alert","onSubmitForm","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;AAEA,IAAMC,aAAa,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,wBAAnB;AAIA,IAAMC,WAAW,GAAGP,MAAM,CAACJ,IAAD,CAAT;AAAA;AAAA;AAAA,qBAAjB;;AAIA,IAAMY,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADsB,qBAEaC,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFxB;AAAA,MAEfC,YAFe,gBAEfA,YAFe;AAAA,MAEDC,UAFC,gBAEDA,UAFC;;AAAA,kBAGSV,QAAQ,CAAC,EAAD,CAHjB;AAAA;AAAA,MAGfW,KAHe;AAAA,MAGRC,aAHQ;;AAAA,mBAIeZ,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,MAIfa,QAJe;AAAA,MAILC,gBAJK;;AAMtBtB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGkB,UAAH,EAAe;AACbK,MAAAA,KAAK,CAACL,UAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAMA,MAAMM,YAAY,GAAGzB,WAAW,CAAC,YAAM;AACrC0B,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmBE,QAAnB;AACAP,IAAAA,QAAQ,CAACL,kBAAkB,CAAC;AAACU,MAAAA,KAAK,EAALA,KAAD;AAAQE,MAAAA,QAAQ,EAARA;AAAR,KAAD,CAAnB,CAAR;AACD,GAH+B,EAG7B,CAACF,KAAD,EAAQE,QAAR,CAH6B,CAAhC;AAKA,sBACE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEG,YAAvB;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA,QADF,eAEE,cAFF,eAGE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,IAAI,EAAC,OAA9B;AAAsC,QAAA,KAAK,EAAEL,KAA7C;AAAoD,QAAA,QAAQ,EAAEC,aAA9D;AAA6E,QAAA,QAAQ;AAArF,QAHF;AAAA,MADF,eAME;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA,QADF,eAEE,cAFF,eAGE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,IAAI,EAAC,UAA3B;AAAsC,QAAA,KAAK,EAAEC,QAA7C;AAAuD,QAAA,QAAQ,EAAEC,gBAAjE;AAAmF,QAAA,QAAQ;AAA3F,QAHF;AAAA,MANF,eAWE,MAAC,aAAD;AAAA,8BACE,KAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAEL,YAAlD;AAAA;AAAA,QADF,eAEE,KAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BAAqB;AAAA,iCAAG,KAAC,MAAD;AAAA;AAAA;AAAH;AAArB,QAFF;AAAA,MAXF;AAAA,IADF;AAkBD,CAnCD;;AAqCA,eAAeJ,SAAf","sourcesContent":["import React, {useCallback, useEffect} from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport {loginRequestAction} from '../reducers/user';\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top : 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding : 10px;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const {logInLoading, logInError} = useSelector((state) => state.user);\r\n  const [email, onChangeEmail] = useInput(''); \r\n  const [password, onChangePassword] = useInput('');\r\n\r\n  useEffect(() => {\r\n    if(logInError) {\r\n      alert(logInError);\r\n    }\r\n  }, [logInError]);\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    console.log(email, password);\r\n    dispatch(loginRequestAction({email, password}));\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n      <div>\r\n        <label htmlFor=\"user-email\">이메일</label>\r\n        <br />\r\n        <Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeEmail} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-password\">비밀번호</label>\r\n        <br />\r\n        <Input name=\"user-id\" type=\"password\" value={password} onChange={onChangePassword} required />\r\n      </div>\r\n      <ButtonWrapper>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>로그인</Button>\r\n        <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n      </ButtonWrapper>\r\n    </FormWrapper>\r\n  );\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}