{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = false;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","reducer","state","action","draft","unshift","error","filter","v","i","post","find","id","PostId","Likers","push","UserId","concat","length","Comments"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePosts: true,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  retweetLoading: false,\r\n  retweetDone: false,\r\n  retweetError: null,\r\n};\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case RETWEET_REQUEST:\r\n      draft.retweetLoading = true;\r\n      draft.retweetDone = false;\r\n      draft.retweetError = null;\r\n      break;\r\n    case RETWEET_SUCCESS: {\r\n      draft.retweetLoading = false;\r\n      draft.retweetDone = true;\r\n      draft.mainPosts.unshift(action.data);\r\n      break;\r\n    }\r\n    case RETWEET_FAILURE:\r\n      draft.retweetLoading = false;\r\n      draft.retweetError = action.error;\r\n      break;\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.uploadImagesLoading = true;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = null;\r\n      break;\r\n    case UPLOAD_IMAGES_SUCCESS: {\r\n      draft.imagePaths = action.data;\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesDone = true;\r\n      break;\r\n    }\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesError = action.error;\r\n      break;\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers.push({id: action.data.UserId});\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostLoading = false;\r\n      draft.likePostError = action.error;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostError = action.error;\r\n      break;\r\n    case LOAD_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n    case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      draft.hasMorePosts = action.data.length === 10;\r\n      break;\r\n    case LOAD_POSTS_FAILURE:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.imagePaths = [];\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = false;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS:\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      break;\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}