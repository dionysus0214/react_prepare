{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NodeJS\\\\react-twitter\\\\prepare\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","END","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","post","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","map","getServerSideProps","context","store","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,GAAR,QAAkB,YAAlB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;AACA,SAAQC,oBAAR,QAAmC,kBAAnC;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAACW,IAAAA;AAAD,MAAOV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AACA,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,gBAA1B;AAA4CC,IAAAA;AAA5C,MAA4DhB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACM,IAAlB,CAA7E;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGkB,YAAH,EAAiB;AACfE,MAAAA,KAAK,CAACF,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMAlB,EAAAA,SAAS,CAAC,MAAM;AACd,aAASqB,QAAT,GAAoB;AAClB,UAAGC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAuC,GAAnG,EAAwG;AACtG,YAAGX,YAAY,IAAI,CAACC,gBAApB,EAAsC;AAAA;;AACpC,gBAAMW,MAAM,iBAAGb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAnB,UAAAA,QAAQ,CAAC;AACPoB,YAAAA,IAAI,EAAExB,kBADC;AAEPqB,YAAAA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AACDN,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACL,YAAD,EAAeC,gBAAf,EAAiCF,SAAjC,CAhBM,CAAT;AAkBA,sBACE,QAAC,SAAD;AAAA,eACGH,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADT,EAEGG,SAAS,CAACmB,GAAV,CAAef,IAAD,iBAAU,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACW,EAApB;AAAA;AAAA;AAAA;AAAA,YAAxB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnCD;;AAqCA,OAAO,MAAMK,kBAAkB,GAAG1B,OAAO,CAAC0B,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9EA,EAAAA,OAAO,CAACC,KAAR,CAAc1B,QAAd,CAAuB;AACrBoB,IAAAA,IAAI,EAAEvB;AADe,GAAvB;AAGAG,EAAAA,QAAQ,CAAC;AACPoB,IAAAA,IAAI,EAAExB;AADC,GAAD,CAAR;AAGA6B,EAAAA,OAAO,CAACC,KAAR,CAAc1B,QAAd,CAAuBR,GAAvB;AACA,QAAMiC,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBC,SAAvB,EAAN;AACD,CATiC,CAA3B;AAWP,eAAe7B,IAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {END} from 'redux-saga';\r\n\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport {LOAD_POSTS_REQUEST} from '../reducers/post';\r\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const {me} = useSelector((state) => state.user);\r\n  const {mainPosts, hasMorePosts, loadPostsLoading, retweetError} = useSelector((state) => state.post);\r\n  \r\n  useEffect(() => {\r\n    if(retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight- 300) {\r\n        if(hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  dispatch({\r\n    type: LOAD_POSTS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}