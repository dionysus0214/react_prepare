{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/NodeJS/react-twitter/prepare/front/sagas/user.js"],"names":["all","fork","takeLatest","put","delay","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,UAAnB,EAA+BC,GAA/B,EAAoCC,KAApC,QAAgD,oBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAG,gBADC;AAERJ,MAAAA,IAAI,EAAGG,MAAM,CAACH;AAFN,KAAD,CAAT;AAID,GAPD,CAOE,OAAMK,GAAN,EAAW;AACX,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAG,gBADC;AAERJ,MAAAA,IAAI,EAAGK,GAAG,CAACC,QAAJ,CAAaN;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASO,SAAT,GAAqB;AACnB,SAAOT,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUO,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAG;AADC,KAAD,CAAT;AAGD,GAND,CAME,OAAMC,GAAN,EAAW;AACX,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAG,iBADC;AAERJ,MAAAA,IAAI,EAAGK,GAAG,CAACC,QAAJ,CAAaN;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUS,UAAV,GAAuB;AACrB,QAAMd,UAAU,CAAC,gBAAD,EAAmBO,KAAnB,CAAhB;AACD;;AAED,UAAUQ,WAAV,GAAwB;AACtB,QAAMf,UAAU,CAAC,iBAAD,EAAoBa,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CACRC,IAAI,CAACe,UAAD,CADI,EAERf,IAAI,CAACgB,WAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import {all, fork, takeLatest, put, delay} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type : 'LOG_IN_SUCCESS',\r\n      data : action.data,\r\n    });\r\n  } catch(err) {\r\n    yield put({\r\n      type : 'LOG_IN_FAILURE',\r\n      data : err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/api/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type : 'LOG_OUT_SUCCESS',\r\n    });\r\n  } catch(err) {\r\n    yield put({\r\n      type : 'LOG_OUT_FAILURE',\r\n      data : err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest('LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}